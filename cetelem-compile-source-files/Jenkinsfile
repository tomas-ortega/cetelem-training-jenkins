pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: "${env.LOG_ROTATOR_NUM_TO_KEEP}", artifactNumToKeepStr: "${env.LOG_ROTATOR_ARTIFACT_NUM_TO_KEEP}"))
        timestamps()
    }

    stages {
        stage('Clean WorkSpace') {
            steps {
               cleanWs()
            }
        }

        stage('Compile source files') {
            steps {
                sh "ls -la $COMPILATION_SERVER_PATH"
                sh "touch $COMPILATION_SERVER_PATH\$(date '+%Y-%m-%d_%H:%M:%S').compiled"
            }
        }
    }

    post {
        failure {
            script {
                /*def myCompilationNumber = "$BUILD_NUMBER"

                if (myCompilationNumber == "500") {
                    build job: ...
                } else {

                } */  

                build job: 'cetelem-send-email', parameters: [
                    string(name: 'TO', value: "$EMAIL_LIST_IT_TEAM"),
                    string(name: 'SUBJECT', value: "Error en Job - $JOB_NAME - $BUILD_NUMBER"),
                    string(name: 'BODY', value: "Se ha detectado un error en el Job $JOB_NAME, ha fallado la build $BUILD_NUMBER")
                ]
            }        
        }

        success  {
            script {
                build job: 'cetelem-send-email', parameters: [
                    string(name: 'TO', value: "$EMAIL_LIST_DEV_TEAM"),
                    string(name: 'SUBJECT', value: "Compilación de Job - $JOB_NAME - $BUILD_NUMBER - con éxito :D"),
                    string(name: 'BODY', value: "Te informo que en el Job $JOB_NAME se ha compilado de forma correcta.")
                ]
            }  
        }      
    }
}